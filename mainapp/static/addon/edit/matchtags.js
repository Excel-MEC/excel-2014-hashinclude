(function(t){if(typeof exports=="object"&&typeof module=="object")t(require("../../lib/codemirror"),require("../fold/xml-fold"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror","../fold/xml-fold"],t);else t(CodeMirror)})(function(t){"use strict";t.defineOption("matchTags",false,function(i,r,f){if(f&&f!=t.Init){i.off("cursorActivity",a);i.off("viewportChange",o);e(i)}if(r){i.state.matchBothTags=typeof r=="object"&&r.bothTags;i.on("cursorActivity",a);i.on("viewportChange",o);a(i)}});function e(t){if(t.state.tagHit)t.state.tagHit.clear();if(t.state.tagOther)t.state.tagOther.clear();t.state.tagHit=t.state.tagOther=null}function a(a){a.state.failedTagMatch=false;a.operation(function(){e(a);if(a.somethingSelected())return;var o=a.getCursor(),i=a.getViewport();i.from=Math.min(i.from,o.line);i.to=Math.max(o.line+1,i.to);var r=t.findMatchingTag(a,o,i);if(!r)return;if(a.state.matchBothTags){var f=r.at=="open"?r.open:r.close;if(f)a.state.tagHit=a.markText(f.from,f.to,{className:"CodeMirror-matchingtag"})}var n=r.at=="close"?r.open:r.close;if(n)a.state.tagOther=a.markText(n.from,n.to,{className:"CodeMirror-matchingtag"});else a.state.failedTagMatch=true})}function o(t){if(t.state.failedTagMatch)a(t)}t.commands.toMatchingTag=function(e){var a=t.findMatchingTag(e,e.getCursor());if(a){var o=a.at=="close"?a.open:a.close;if(o)e.extendSelection(o.to,o.from)}}});